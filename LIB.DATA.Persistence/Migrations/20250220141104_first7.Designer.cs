// <auto-generated />
using System;
using LIB.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LIB.API.Persistence.Migrations
{
    [DbContext(typeof(LIBAPIDbSQLContext))]
    [Migration("20250220141104_first7")]
    partial class first7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LIB.API.Domain.ErrorLog", b =>
                {
                    b.Property<string>("ticketId")
                        .HasColumnType("text");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("feedbacks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("returnCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("traceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ticketId");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("LIB.API.Domain.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ReciverAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReciverAccountIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("accountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("bankId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankStatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cbsStatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentScheme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("referenceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("requestedExecutionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("reservationId")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("LIB.API.Domain.TransactionSimulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ReciverAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReciverAccountIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("accountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("bankId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankStatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cbsStatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentScheme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("referenceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("requestedExecutionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("reservationId")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionSimulation");
                });

            modelBuilder.Entity("LIB.API.Domain.UpdateLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogId"));

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedFields")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LogId");

                    b.ToTable("UpdateLog");
                });

            modelBuilder.Entity("LIB.API.Domain.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using System.Collections.Generic;
using LIB.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LIB.API.Persistence.Migrations
{
    [DbContext(typeof(LIBAPIDbSQLContext))]
    [Migration("20250320090802_list")]
    partial class list
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LIB.API.Domain.AirlinesError", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ErrorType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Feedbacks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReturnCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TicketId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TraceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("airlineserror");
                });

            modelBuilder.Entity("LIB.API.Domain.AirlinesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MerchantCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MerchantId")
                        .HasColumnType("bigint");

                    b.Property<string>("MerchantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StatusCodeResponse")
                        .HasColumnType("integer");

                    b.Property<string>("StatusCodeResponseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TraceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("airlinesorder");
                });

            modelBuilder.Entity("LIB.API.Domain.AirlinesTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CAccountName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CAccountNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DAccountBranch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DAccountNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndToEndId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ErrorReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstrId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<string>("MsgId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PmtInfId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ResponseStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResponseTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("airlinestransfer");
                });

            modelBuilder.Entity("LIB.API.Domain.BillGetRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BillerType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("CurrencyAlphaCode")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<List<string>>("CurrencyDesignation")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<List<string>>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<List<decimal>>("InvoiceAmount")
                        .IsRequired()
                        .HasColumnType("numeric[]");

                    b.Property<List<int>>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<List<string>>("InvoiceIdentificationValue")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("ProviderName")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReqProviderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReqTransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<string>>("ResProviderId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateTime>("ResTransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ResponseError")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BillGetRequests");
                });

            modelBuilder.Entity("LIB.API.Domain.ConfirmOrders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MerchantCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MerchantId")
                        .HasColumnType("bigint");

                    b.Property<string>("MerchantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaidAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PayerCustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StatusCodeResponse")
                        .HasColumnType("integer");

                    b.Property<string>("StatusCodeResponseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TraceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("confirmorders");
                });

            modelBuilder.Entity("LIB.API.Domain.ConfirmRefund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("BankRefundReference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundFOP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponseAmount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponseBankRefundReference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponseMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponseRefundReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("integer");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("confirmRefunds");
                });

            modelBuilder.Entity("LIB.API.Domain.ECPaymentRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BillerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ECPaymentRecords");
                });

            modelBuilder.Entity("LIB.API.Domain.ErrorLog", b =>
                {
                    b.Property<string>("ticketId")
                        .HasColumnType("text");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionId")
                        .HasColumnType("text");

                    b.Property<string>("TransactionType")
                        .HasColumnType("text");

                    b.Property<string>("feedbacks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("returnCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("traceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ticketId");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("LIB.API.Domain.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CBSErrorReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("CBSIsSuccessful")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CBSRequestTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CBSResponseStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CBSResponseTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DAccountBranch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DAccountNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndToEndId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstrId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MsgId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PmtInfId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundFOP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefundReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("refunds");
                });

            modelBuilder.Entity("LIB.API.Domain.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolderName")
                        .HasColumnType("text");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<string>("ReciverAccountId")
                        .HasColumnType("text");

                    b.Property<string>("ReciverAccountIdType")
                        .HasColumnType("text");

                    b.Property<Guid?>("accountId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("bankId")
                        .HasColumnType("text");

                    b.Property<string>("bankIdType")
                        .HasColumnType("text");

                    b.Property<string>("bankName")
                        .HasColumnType("text");

                    b.Property<string>("bankStatusMessage")
                        .HasColumnType("text");

                    b.Property<string>("cbsStatusMessage")
                        .HasColumnType("text");

                    b.Property<string>("conversationId")
                        .HasColumnType("text");

                    b.Property<string>("paymentScheme")
                        .HasColumnType("text");

                    b.Property<string>("paymentType")
                        .HasColumnType("text");

                    b.Property<Guid?>("referenceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("requestedExecutionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("reservationId")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("LIB.API.Domain.TransactionSimulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReciverAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReciverAccountIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("accountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<string>("bankId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankStatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cbsStatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentScheme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("receiptStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("referenceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("requestedExecutionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("reservationId")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionSimulation");
                });

            modelBuilder.Entity("LIB.API.Domain.UpdateLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogId"));

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecordId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedFields")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LogId");

                    b.ToTable("UpdateLog");
                });

            modelBuilder.Entity("LIB.API.Domain.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedDate")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
